{"ast":null,"code":"var _jsxFileName = \"/home/peter/mapsted/mapsted/src/components/main-container.js\";\nimport React, { Component } from 'react';\nimport InputDropdown from './input-dropdown.js';\nimport ResultDisplay from './result-display.js';\nimport axios from 'axios';\n\nclass MainContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inputType: 'Numeric',\n      inputSequence: '',\n      stepsOutput: [],\n      isError: false\n    };\n\n    this.handleInputTypeChange = inputTypeChange => {\n      this.setState({\n        inputType: inputTypeChange\n      });\n    };\n\n    this.handleInputSequence = event => {\n      this.setState({\n        inputSequence: event.target.value\n      });\n    };\n\n    this.handleSequenceSubmit = () => {\n      axios.post('http://localhost:3001/sort/sequence', {\n        mode: this.state.inputType,\n        sequence: this.state.inputSequence\n      }).then(res => {\n        this.setState({\n          stepsOutput: res.data.resultingSteps\n        });\n      }).catch(err => {\n        console.error(`There was an error sorting the sequence ${this.state.sequence} with error ${err}`);\n        this.setState({\n          stepsOutput: `There was an error sorting the sequence ${this.state.sequence} with error ${err}`\n        });\n      });\n    };\n\n    this.checkValidity = input => {\n      if (input.length < 1 && input.length > 100) {\n        return false;\n      }\n\n      if (this.state.inputType === 'Numeric') {\n        return !input.some(isNaN);\n      } else {\n        return !input.some(element => element.length > 10);\n      }\n    };\n\n    this.validateAndSubmit = event => {\n      const inputArray = this.state.inputSequence.split(',');\n\n      if (this.checkValidity(inputArray)) {\n        this.setState({\n          isError: false\n        });\n        this.handleSequenceSubmit();\n      } else {\n        this.setState({\n          isError: true\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(InputDropdown, {\n      inputType: this.state.inputType,\n      onInputTypeChange: this.handleInputTypeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleInputSequence,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.validateAndSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, \"Sort!\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"result\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, \"You selected\", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, \" \", this.state.inputType, \" \"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 49\n      }\n    }), \"With sequence\", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, \" \", this.state.inputSequence, \" \"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 53\n      }\n    }), \"And got result\", /*#__PURE__*/React.createElement(ResultDisplay, {\n      isError: this.state.isError,\n      stepsOutput: this.state.stepsOutput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    })));\n  }\n\n}\n\nexport default MainContainer;","map":{"version":3,"sources":["/home/peter/mapsted/mapsted/src/components/main-container.js"],"names":["React","Component","InputDropdown","ResultDisplay","axios","MainContainer","state","inputType","inputSequence","stepsOutput","isError","handleInputTypeChange","inputTypeChange","setState","handleInputSequence","event","target","value","handleSequenceSubmit","post","mode","sequence","then","res","data","resultingSteps","catch","err","console","error","checkValidity","input","length","some","isNaN","element","validateAndSubmit","inputArray","split","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport InputDropdown from './input-dropdown.js'\nimport ResultDisplay from './result-display.js'\nimport axios from 'axios'\n\nclass MainContainer extends Component {\n  state = {\n    inputType: 'Numeric',\n    inputSequence: '',\n    stepsOutput: [],\n    isError: false,\n  }\n\n  // handles the dropdown menu's selection of input type\n  handleInputTypeChange = inputTypeChange => {\n    this.setState({ inputType: inputTypeChange })\n  }\n\n  // handles the input box's change of value\n  handleInputSequence = event => {\n      this.setState({ inputSequence: event.target.value })\n  }\n\n  // handles the call to backend for sorting the sequence\n  handleSequenceSubmit = () => {\n      axios\n        .post('http://localhost:3001/sort/sequence', {\n            mode: this.state.inputType,\n            sequence: this.state.inputSequence\n        })\n        .then(res => {\n          this.setState({stepsOutput: res.data.resultingSteps})\n        })\n        .catch(err => {\n          console.error(`There was an error sorting the sequence ${this.state.sequence} with error ${err}`)\n          this.setState({ stepsOutput: `There was an error sorting the sequence ${this.state.sequence} with error ${err}` })\n        })\n  }\n\n  checkValidity = (input) => {\n    if (input.length < 1 && input.length > 100) {\n      return false\n    }\n\n    if (this.state.inputType === 'Numeric')  {\n        return !input.some(isNaN)\n    } else {\n        return !input.some((element) => element.length > 10)\n    }\n  }\n\n  // handles the client side validation of input and submits to backend\n  validateAndSubmit = event => {\n      const inputArray = this.state.inputSequence.split(',')\n\n      if(this.checkValidity(inputArray)) {\n        this.setState({ isError: false })\n        this.handleSequenceSubmit()\n      } else {\n        this.setState({ isError: true })\n      }\n  }\n\n  render() {\n    return (\n    <section>\n      <InputDropdown inputType={this.state.inputType} onInputTypeChange={this.handleInputTypeChange} />\n      <input type='text' onChange={this.handleInputSequence}/>\n      <button onClick={this.validateAndSubmit}>\n          Sort!\n      </button>\n      <div className='result'>\n      You selected\n      <strong> {this.state.inputType} </strong> <br/>\n      With sequence\n      <strong> {this.state.inputSequence} </strong> <br/>\n      And got result\n      <ResultDisplay isError={this.state.isError} stepsOutput={this.state.stepsOutput}/>\n    </div>\n    </section>\n    )\n  }\n\n}\n\nexport default MainContainer"]},"metadata":{},"sourceType":"module"}